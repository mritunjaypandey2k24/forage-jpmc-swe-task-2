From a24dad00e9761dc92fa3c93cfd82e3de0d94c607 Mon Sep 17 00:00:00 2001
From: Mritunjay Pandey <mritunjaypandey.ee@gmail.com>
Date: Thu, 18 Apr 2024 19:41:06 +0530
Subject: [PATCH] JP Task 2 Commit done

---
 src/App.tsx   | 17 +++++++++++++++++
 src/Graph.tsx | 12 +++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..e65c9c2 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,13 +31,28 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+    if (this.state.showGraph) {
     return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+    let x = 0;
+    const interval = setInterval(() => {
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        this.setState({
+          data: serverResponds,
+          showGraph: true,
+        });
+      });
+      x++;
+      if (x > 1000) {
+        clearInterval(interval);
+      }
+    }, 100);
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..376b6a6 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement{
   load: (table: Table) => void,
 }
 
@@ -33,6 +33,16 @@ class Graph extends Component<IProps, {}> {
   componentDidMount() {
     // Get element to attach the table from the DOM.
     const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    elem.setAttribute('view', 'y_line');
+    elem.setAttribute('column-pivots', '["stock"]');
+    elem.setAttribute('row-pivots', '["time_stamp"]');
+    elem.setAttribute('columns', '["top_ask_price"]');
+    elem.setAttribute('aggregates', JSON.stringify({
+      stock: 'distinct count',
+      top_ask_price: 'avg',
+      top_bid_price: 'avg',
+      timestamp: 'distinct count',
+    }));
 
     const schema = {
       stock: 'string',
-- 
2.37.1.windows.1

